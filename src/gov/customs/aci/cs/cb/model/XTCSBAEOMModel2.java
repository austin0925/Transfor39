/**
 * Copyright (c) 2012 Trade-Van Information Service Co.
 * All Rights Reserved.
 *
 * This software is the confidential and proprietary information of
 * Trade-Van Information Service Co. ("Confidential Information").
 *
 * You shall not disclose such Confidential Information and shall use it
 * only in accordance with the terms of license agreement you entered
 * into with Trade-Van Information Service Co.
 */
package gov.customs.aci.cs.cb.model;

import com.tradevan.commons.collection.DataList;
import com.tradevan.taurus.xdao.QueryParameter;
import com.tradevan.taurus.xdao.SqlWhere;
import com.tradevan.taurus.xdao.XdaoException;
import com.tradevan.taurus.xdao.XdaoSession;

import gov.customs.aci.cs.dao.bean.CSZLOG2Bean;
import gov.customs.aci.cs.dao.bean.CSZLOG3Bean;
import gov.customs.aci.cs.dao.model.CSBAEOMModel;
import gov.customs.aci.cs.dao.model.CSZLOG2Model;
import gov.customs.aci.cs.dao.model.CSZLOG3Model;
import gov.customs.commons.converter.RocDate;

/**
 * 作 業 代 碼 ：.<br>
 * 作 業 名 稱 ：<br>
 * 程 式 代 號 ：XTCSBAEOMMODEL2.java<br>
 * 描             述 ：<br>
 * 公             司 ：Tradevan Co.<br><br>
 *【 資 料 來 源】  ：<br>
 *【 輸 出 報 表】  ：<br>
 *【 異 動 紀 錄】  ：<br>
 * @author   : Keng-Kuei, Lin<br>
 * @version  : 1.0.0 2012/12/5<P>
 */
public class XTCSBAEOMModel2 extends CSZLOG2Model{

	/* 新版SQL

Select 
Log_Date, 
Log_Type,
(Select New_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='BAN' ) New_Ban, 
(Select Old_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='BAN' ) Old_Ban, 
(Select New_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='NOTE' ) New_Note ,
(Select Old_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='NOTE' ) Old_Note ,
(Select New_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='MARK' ) New_Mark ,
(Select Old_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='MARK' ) Old_Mark ,
(Select New_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='BEG_DATE' ) New_BEG_DATE ,
(Select Old_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='BEG_DATE' ) Old_BEG_DATE ,
(Select New_Data From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And Field_Name='END_DATE' ) New_END_DATE ,
(Select OLD_DATA From Cszlog3 Where Cszlog2.Transaction_Id = Cszlog3.Transaction_Id And Cszlog2.Tab_Seq=Cszlog2.Tab_Seq And FIELD_NAME='END_DATE' ) OLD_END_DATE
From Cszlog2 
where TAB_NAME='CSBAEOM';
	
	 */
	public DataList getCB702_1List(RocDate begDate, RocDate endDate) throws XdaoException {
		XdaoSession session = getXdaoSession();
        QueryParameter param = session.getQueryParameter();
        param.select("TO_CHAR(CSZLOG2.LOG_DATE,'YYYYMMDD') LOG_DATE ,CSZLOG2.LOG_TYPE,CSZLOG3.FIELD_NAME,CSZLOG3.OLD_DATA,CSZLOG3.NEW_DATA");
        //param.select("CSZLOG2.TRANSACTION_ID, CSZLOG3.TRANSACTION_ID");
        String whereStr = "CSZLOG2.TAB_NAME = 'CSBAEOM' AND CSZLOG2.LOG_DATE BETWEEN TO_DATE('"+begDate.toDateString()+"','YYYY-MM-DD') AND TO_DATE('"+endDate.toDateString()+"','YYYY-MM-DD')";
        SqlWhere where = new SqlWhere();
        param.join(CSZLOG3Model.TABLE, CSZLOG2Bean.T_TRANSACTION_ID, CSZLOG3Bean.T_TRANSACTION_ID);
        param.where(whereStr);
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,"<=",endDate, true));
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,">=",begDate, true));
		return session.executeQuery(param);	
	}
	
	/*
	 Select
TO_CHAR(CSZLOG2.LOG_DATE,'YYYYMMDD') LOG_DATE, LOG_TYPE,
(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) NEW_BAN, 
(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='BAN'  AND OLD_DATA IS NOT NULL) OLD_BAN, 
(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='AVT_ID' AND NEW_DATA IS NOT NULL ) NEW_AVT_ID ,
(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='AVT_ID'  AND OLD_DATA IS NOT NULL) OLD_AVT_ID ,
(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='MFG_NAME' AND NEW_DATA IS NOT NULL ) NEW_MFG_NAME ,
(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='MFG_NAME' AND OLD_DATA IS NOT NULL ) OLD_MFG_NAME 
From CSZLOG2 
WHERE TAB_NAME='CSBCOMM' AND (Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) IS NOT NULL ;
	 */
	
	
	public DataList getCB703List(RocDate begDate, RocDate endDate) throws XdaoException {
		XdaoSession session = getXdaoSession();
        QueryParameter param = session.getQueryParameter();
        param.select("TO_CHAR(CSZLOG2.LOG_DATE,'YYYYMMDD') LOG_DATE, LOG_TYPE,"+
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) NEW_BAN,"+ 
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND OLD_DATA IS NOT NULL) OLD_BAN,"+ 
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='AVT_ID' AND NEW_DATA IS NOT NULL ) NEW_AVT_ID ,"+
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='AVT_ID'  AND OLD_DATA IS NOT NULL) OLD_AVT_ID ,"+
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MFG_NAME' AND NEW_DATA IS NOT NULL ) NEW_MFG_NAME ,"+
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MFG_NAME' AND OLD_DATA IS NOT NULL ) OLD_MFG_NAME ");
        //param.select("CSZLOG2.TRANSACTION_ID, CSZLOG3.TRANSACTION_ID");
        String whereStr = "TAB_NAME='CSBCOMM' AND (Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) IS NOT NULL AND CSZLOG2.LOG_DATE BETWEEN TO_DATE('"+begDate.toDateString()+"','YYYY-MM-DD') AND TO_DATE('"+endDate.toDateString()+"','YYYY-MM-DD')";
        //SqlWhere where = new SqlWhere();
        //param.join(CSZLOG3Model.TABLE, CSZLOG2Bean.T_TRANSACTION_ID, CSZLOG3Bean.T_TRANSACTION_ID);
        param.where(whereStr);
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,"<=",endDate, true));
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,">=",begDate, true));
		return session.executeQuery(param);	
	}
	
	
	 /**
	  * getCB702List 說明：CB702優質企業異動青表資料查詢.<br>
	  * @param begDate 起始日期
	  * @param endDate 截止日期
	  * @param note 優質企業/安全認證 註記
	  * @return
	  * @throws XdaoException
	  * @author: Keng-Kuei, Lin<br>
	  * SQL:SELECT TO_CHAR(CSZLOG2.LOG_DATE,'YYYYMMDD') LOG_DATE, LOG_TYPE,(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) NEW_BAN,(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND OLD_DATA IS NOT NULL) OLD_BAN,(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE'  AND NEW_DATA IS NOT NULL ) NEW_NOTE,(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE'  AND OLD_DATA IS NOT NULL) OLD_NOTE,(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MARK'  AND NEW_DATA IS NOT NULL ) NEW_MARK,(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MARK'  AND OLD_DATA IS NOT NULL) OLD_MARK,(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BEG_DATE' AND NEW_DATA IS NOT NULL ) NEW_BEG_DATE ,(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BEG_DATE'  AND OLD_DATA IS NOT NULL) OLD_BEG_DATE ,(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='END_DATE' AND NEW_DATA IS NOT NULL ) NEW_END_DATE ,(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='END_DATE' AND OLD_DATA IS NOT NULL ) OLD_END_DATE  FROM CSZLOG2 WHERE TAB_NAME='CSBAEOM' AND ((Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN') || (Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN')) IS NOT NULL AND ((Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE') || (Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE')) LIKE '%' AND CSZLOG2.LOG_DATE BETWEEN TO_DATE('2013/10/03 00:00:00','YYYY-MM-DD hh24:mi:ss') AND TO_DATE('2013/10/04','YYYY-MM-DD')
	  */
	public DataList getCB702List(RocDate begDate, RocDate endDate, String note) throws XdaoException {
		XdaoSession session = getXdaoSession();
        QueryParameter param = session.getQueryParameter();
        param.select("TO_CHAR(CSZLOG2.LOG_DATE,'YYYYMMDD') LOG_DATE, LOG_TYPE,"+
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND NEW_DATA IS NOT NULL ) NEW_BAN,"+ 
  			  		  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN'  AND OLD_DATA IS NOT NULL) OLD_BAN,"+
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE'  AND NEW_DATA IS NOT NULL ) NEW_NOTE,"+ 
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE'  AND OLD_DATA IS NOT NULL) OLD_NOTE,"+ 
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MARK'  AND NEW_DATA IS NOT NULL ) NEW_MARK,"+ 
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='MARK'  AND OLD_DATA IS NOT NULL) OLD_MARK,"+ 
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BEG_DATE' AND NEW_DATA IS NOT NULL ) NEW_BEG_DATE ,"+
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BEG_DATE'  AND OLD_DATA IS NOT NULL) OLD_BEG_DATE ,"+
        			  "(Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='END_DATE' AND NEW_DATA IS NOT NULL ) NEW_END_DATE ,"+
        			  "(Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='END_DATE' AND OLD_DATA IS NOT NULL ) OLD_END_DATE ");
        //param.select("CSZLOG2.TRANSACTION_ID, CSZLOG3.TRANSACTION_ID");
        String whereStr = "TAB_NAME='CSBAEOM' AND "+
        				  "((Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN') || (Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='BAN')) IS NOT NULL AND "+
        				  "((Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE') || (Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG3.TAB_SEQ AND FIELD_NAME='NOTE')) LIKE '"+note+"' AND "+
        				  //"((Select NEW_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='MARK') || (Select OLD_DATA FROM CSZLOG3 WHERE CSZLOG2.TRANSACTION_ID = CSZLOG3.TRANSACTION_ID AND CSZLOG2.TAB_SEQ=CSZLOG2.TAB_SEQ AND FIELD_NAME='MARK') = '"+mark+"' AND"+
        				  "CSZLOG2.LOG_DATE BETWEEN TO_DATE('"+begDate.toDateString()+" 00:00:00','YYYY-MM-DD hh24:mi:ss') AND TO_DATE('"+endDate.toDateString()+" 23:59:59','YYYY-MM-DD hh24:mi:ss')";
        //SqlWhere where = new SqlWhere();
        //param.join(CSZLOG3Model.TABLE, CSZLOG2Bean.T_TRANSACTION_ID, CSZLOG3Bean.T_TRANSACTION_ID);
        param.where(whereStr);
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,"<=",endDate, true));
        //where.add(new SqlPredicate(CSZLOG2Bean.LOG_DATE,">=",begDate, true));
		return session.executeQuery(param);	
	}

}
